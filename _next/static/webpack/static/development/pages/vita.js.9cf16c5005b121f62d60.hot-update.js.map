{"version":3,"file":"static/webpack/static/development/pages/vita.js.9cf16c5005b121f62d60.hot-update.js","sources":["webpack:///./src/components/home/Experience.jsx"],"sourcesContent":["import React from \"react\";\nimport marked from \"marked\";\nimport \"./news.scss\";\nimport Section from \"../Section\";\nimport * as moment from \"moment\";\nimport data from \"../../api/data\";\nimport { markedInline } from \"../../utils/helpers\";\nimport CVTable from \"../CVTable\";\nimport \"./Experience.scss\";\n\nfunction formatDate(str, _default) {\n  const date = moment(str, moment.ISO_8601, false);\n  if (date.isValid()) {\n    return date.format(\"MMM YYYY\");\n  }\n  return _default;\n}\n\nfunction Experience(props) {\n  const { experience, detail } = props;\n  let job = experience.job;\n  if (experience.advisor) {\n    job = `${job} (advised by ${experience.advisor})`;\n  }\n  const name = (<React.Fragment>\n    <span className=\"date-from\">{formatDate(experience.from, experience.from)}</span>\n    <span className=\"date-to\"> - {formatDate(experience.to, experience.to)}</span>\n  </React.Fragment>);\n  const content = (<div>\n    <div>\n      <span className=\"institute\" dangerouslySetInnerHTML={{ __html: markedInline(experience.company) }} />\n    {experience.location}\n    </div>\n    <div>\n      <span className=\"title\" dangerouslySetInnerHTML={{ __html: markedInline(job) }} />\n      {experience.department &&\n        <React.Fragment>\n          {\", \"}\n          <span className=\"department\" dangerouslySetInnerHTML={{ __html: markedInline(experience.department) }} />\n        </React.Fragment>\n      }\n    </div>\n    {detail && experience.content &&\n        <div className=\"description\" dangerouslySetInnerHTML={{ __html: marked(experience.content) }}/>\n    }\n  </div>);\n  return {name, content};\n}\n\nclass Experiences extends React.Component {\n  render() {\n    const { title, experiences, detail } = this.props;\n    return (\n      <Section id=\"experiences\">\n        <h2 dangerouslySetInnerHTML={{ __html: markedInline(title) }} />\n        {experiences && (\n          <CVTable className=\"experiences\" items={experiences.map(experience => Experience({experience, detail}))} />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default function DefaultExperience(props) {\n  const experiences = data.experience || [];\n  const title = \"Research / Work Experience\";\n  return <Experiences title={title} experiences={experiences} {...props} />;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAXA;AACA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}